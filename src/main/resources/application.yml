server:
  forward-headers-strategy: NATIVE
  servlet:
    context-path: /orders
  port: ${PORT:0}

application:
  title: order-service
  version: 1.0.0

eureka:
  instance:
    hostname: localhost
    instance-id: ${spring.application.name}:${instanceId:${random.value}}
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: order-service
  datasource:
    driverClassName: org.postgresql.Driver
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/order}
    username: ${DATABASE_USERNAME:order}
    password: ${DATABASE_PASSWORD:orderservice}
    hikari:
      schema: ${DATABASE_SCHEMA:order}
  jpa:
    properties:
      hibernate.boot.allow_jdbc_metadata_access: true
    show-sql: false
    hibernate:
      format_sql: true
      ddl-auto: none
    naming:
      physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    open-in-view: false
  liquibase:
    change-log: classpath:/db/changelog/liquibase.xml
    enabled: true
  rabbitmq:
    auto-startup: true
    host: localhost
    virtualhost: ${DATABASE_SCHEMA:order}
    ssl:
      enabled: ${RABBIT_SSL_ENABLED:false}
      algorithm: TLSv1.2
    port: ${RABBIT_PORT:5672}
    username: ${RABBIT_USERNAME:admin}
    password: ${RABBIT_PASSWORD:admin123}
    listener:
      simple:
        default-requeue-rejected: 'false' # disabled infinity reprocess on throw RuntimeException
        retry:
          enabled: true
          initial-interval: 60000 # the first time will wait 1 minute to try again
          max-attempts: 3 # will try a maximum of 3 times
          max-interval: 60000 # the maximum interval between attempts is 1 minute
          multiplier: 3.0 # multiplies the range by 3

management:
  endpoints:
    web:
      exposure:
        include:
          - '*'
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enable: true
  show-actuator: true
  packages-to-scan: com.juniorjrc.orderservice.controller
